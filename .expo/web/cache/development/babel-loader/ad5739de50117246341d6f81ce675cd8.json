{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\DictionaryApp-Online-Version-Template-main\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from 'react-native-elements';\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.getWord = function (word) {\n      var searchKeyword = word.toLowerCase();\n      var url;\n      url = \"https://rupinwhitehatjr.github.io/dictionary/\" + +\".json\";\n      return fetch(url).then(function (data) {\n        if (data.status === 200) {\n          return data.json();\n        } else {\n          return null;\n        }\n      }).then(function (response) {\n        var responseObject = response;\n\n        if (responseObject) {\n          var wordData = responseObject.definitions[0];\n          var definition = wordData.description;\n          var lexicalCategory = wordData.wordtype;\n\n          _this.setState({\n            \"word\": _this.state.text,\n            \"definition\": definition,\n            \"lexicalCategory\": lexicalCategory\n          });\n        } else {\n          _this.setState({\n            \"word\": _this.state.text,\n            \"definition\": \"Not Found\"\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      text: '',\n      isSearchPressed: false,\n      isLoading: false,\n      word: \"Loading...\",\n      lexicalCategory: '',\n      definition: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          borderWidth: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'purple',\n        centerComponent: {\n          text: 'Pocket Dictionary',\n          style: {\n            color: '#fff',\n            fontSize: 20\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.inputBoxContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text,\n            isSearchPressed: false,\n            word: \"Loading...\",\n            lexicalCategory: '',\n            examples: [],\n            definition: \"\"\n          });\n        },\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.setState({\n            isSearchPressed: true\n          });\n\n          _this2.getWord(_this2.state.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.searchText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"Search\"))), React.createElement(View, {\n        style: styles.outputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, this.state.isSearchPressed && this.state.word === \"Loading...\" ? this.state.word : \"\"), this.state.word !== \"Loading...\" ? React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, \"Word :\", \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, this.state.word)), React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \"Type :\", \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, this.state.lexicalCategory)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, \"Definition :\", \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, this.state.definition))) : null));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex: 0.3,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputBox: {\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4,\n    borderWidth: 5\n  },\n  searchButton: {\n    width: '40%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10\n  },\n  searchText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  outputContainer: {\n    flex: 0.7,\n    alignItems: 'center'\n  },\n  detailsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  detailsTitle: {\n    color: 'orange',\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Vishal/Desktop/DictionaryApp-Online-Version-Template-main/screens/HomeScreen.js"],"names":["React","Component","Header","HomeScreen","getWord","word","searchKeyword","toLowerCase","url","fetch","then","data","status","json","response","responseObject","wordData","definitions","definition","description","lexicalCategory","wordtype","setState","state","text","isSearchPressed","isLoading","flex","borderWidth","style","color","fontSize","styles","inputBoxContainer","inputBox","examples","searchButton","searchText","outputContainer","justifyContent","marginLeft","detailsContainer","detailsTitle","flexDirection","flexWrap","StyleSheet","create","alignItems","width","alignSelf","height","textAlign","margin","borderRadius","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport { Header } from 'react-native-elements';\nexport default class HomeScreen extends Component{\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n      isSearchPressed: false,\n      isLoading: false,\n      word  : \"Loading...\",\n      lexicalCategory :'',\n      definition : \"\"\n    };\n  }\n\n  getWord=(word)=>{\n    var searchKeyword=word.toLowerCase()\n    var url;\n    //url = \"https://rupinwhitehatjr.github.io/dictionary/searchKeyword.json\"\n    url = \"https://rupinwhitehatjr.github.io/dictionary/\"+ +\".json\"\n    //url = \"https://rupinwhitehatjr.github.io/dictionary/\"+searchKeyword+\".json\"\n    //url = \"https://rupinwhitehatjr.github.io/dictionary/\"+word+\".json\"\n\n    return fetch(url)\n    .then((data)=>{\n      if(data.status===200)\n      {\n        return data.json()\n      }\n      else\n      {\n        return null\n      }\n    })\n    .then((response)=>{\n\n        var responseObject = response\n        if(responseObject)\n        {\n          var wordData = responseObject.definitions[0]\n\n          var definition=wordData.description\n          var lexicalCategory=wordData.wordtype\n\n          this.setState({\n            \"word\" : this.state.text, \n            \"definition\" :definition,\n            \"lexicalCategory\": lexicalCategory     \n            \n          })\n        }\n        else\n        {\n          this.setState({\n            \"word\" : this.state.text, \n            \"definition\" :\"Not Found\",\n            \n          })\n\n        }\n    \n    })\n  }\n\n  render(){\n    return(\n      <View style={{flex:1, borderWidth:2}}>\n        <Header\n          backgroundColor={'purple'}\n          centerComponent={{\n            text: 'Pocket Dictionary',\n            style: { color: '#fff', fontSize: 20 },\n          }}\n        />\n        <View style={styles.inputBoxContainer}>\n      \n    \n     {/*   <input \n           onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n           }}\n        /> \n        */}\n      {/*\n      <TouchableOpacity \n           onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n           }}\n        /> \n      */}\n      {\n          <TextInput\n            style={styles.inputBox}\n            onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n            }}\n            value={this.state.text}\n          />\n  }\n          <TouchableOpacity\n            style={styles.searchButton}\n            onPress={() => {\n              this.setState({ isSearchPressed: true });\n              this.getWord(this.state.text)\n            }}>\n            <Text style={styles.searchText}>Search</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.outputContainer}>\n          <Text style={{fontSize:20}}>\n            {\n              this.state.isSearchPressed && this.state.word === \"Loading...\"\n              ? this.state.word\n              : \"\"\n            }\n          </Text>\n            {\n              this.state.word !== \"Loading...\" ?\n              (\n                <View style={{justifyContent:'center', marginLeft:10 }}>\n                  <View style={styles.detailsContainer}>\n                    <Text style={styles.detailsTitle}>\n                      Word :{\" \"}\n                    </Text>\n                    <Text style={{fontSize:18 }}>\n                      {this.state.word}\n                    </Text>\n                  </View>\n                  <View style={styles.detailsContainer}>\n                    <Text style={styles.detailsTitle}>\n                      Type :{\" \"}\n                    </Text>\n                    <Text style={{fontSize:18}}>\n                      {this.state.lexicalCategory}\n                    </Text>\n                  </View>\n                  <View style={{flexDirection:'row',flexWrap: 'wrap'}}>\n                    <Text style={styles.detailsTitle}>\n                      Definition :{\" \"}\n                    </Text>\n                    <Text style={{ fontSize:18}}>\n                      {this.state.definition}\n                    </Text>\n                  </View>\n                </View>\n              )\n              :null\n            }\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex:0.3,\n    alignItems:'center',\n    justifyContent:'center'\n  },\n  inputBox: {\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4,\n    borderWidth:5\n  },\n  searchButton: {\n    width: '40%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n  },\n  searchText:{\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  outputContainer:{\n    flex:0.7,\n    alignItems:'center'\n  },\n  detailsContainer:{\n    flexDirection:'row',\n    alignItems:'center'\n  },\n  detailsTitle:{\n    color:'orange',\n    fontSize:20,\n    fontWeight:'bold'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}